on:
  push:
    branches:
      - 'master'
    tags:
      - '*'

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Required to fetch all commits and tags
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.22.0'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install
      - name: Build artifacts
        run: |
          VERSION_FILE_NAME=$GITHUB_REPOSITORY \
          VERSION_FILE_VERSION=$(git describe --tags --exclude=latest) \
          yarn build
      - name: Zip project
        run: |
          zip -r -j dist.zip dist/
      - name: Install GHR
        run: |
          curl --fail --silent --location --output ghr.tar.gz https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz
          tar -zxf ghr.tar.gz
          echo "./ghr_v0.13.0_linux_amd64" >> $GITHUB_PATH
      - name: Create release with asset
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        run: |
          ghr -replace -delete -n ${GITHUB_REF:10} -c $GITHUB_SHA ${GITHUB_REF:10} dist.zip
      - name: Update latest release
        if: startsWith(github.ref, 'refs/heads/master')
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        run: |
          ghr -prerelease -replace -delete -n Latest -c master latest dist.zip
