name: Build and test

on: pull_request

jobs:

  stylelint:
    name: Lint .scss
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.22.0'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install

      - name: stylelint
        uses: reviewdog/action-stylelint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          stylelint_input: './src/**/*.scss'
      - name: Lint SCSS
        run: yarn lint:scss

  eslint:
    name: Lint .js and .jsx
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.22.0'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install

      - name: eslint
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          eslint_flags: '--ext .js --ext .jsx ./src/'
      - name: Lint Javascript
        run: yarn lint:js

  test:
    name: Integration test
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.22.0'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: yarn start:storybook:test
          wait-on: 'http://localhost:57021'
          browser: chrome
      - name: Upload screenshots
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - name: Upload videos
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  build:
    name: Build artifacts
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Required to fetch all commits and tags
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.22.0'
      - name: Install Dependencies
        run: yarn install
      - name: Build artifacts
        run: |
          VERSION_FILE_NAME=$GITHUB_REPOSITORY \
          VERSION_FILE_VERSION=$(git describe --tags --exclude=latest) \
          yarn build
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  validate_docs:
    name: Validate documentation
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.22.0'
      - name: Install Dependencies
        run: yarn install
      - name: Build documentation
        run: yarn build:doc
      - name: Validate TOC
        run: git diff --exit-code

  markdownlint:
    name: Lint markdown
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn install
      - name: Install problem matcher
        uses: xt0rted/markdownlint-problem-matcher@v1
      - name: Lint markdown
        run: npx markdownlint-cli2
