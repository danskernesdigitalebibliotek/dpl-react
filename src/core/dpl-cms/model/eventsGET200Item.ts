/**
 * Generated by orval v6.26.0 üç∫
 * Do not edit manually.
 * DPL CMS - REST API
 * The REST API provide by the core REST module.
 * OpenAPI spec version: Versioning not supported
 */
import type { EventsGET200ItemAddress } from "./eventsGET200ItemAddress";
import type { EventsGET200ItemDateTime } from "./eventsGET200ItemDateTime";
import type { EventsGET200ItemExternalData } from "./eventsGET200ItemExternalData";
import type { EventsGET200ItemImage } from "./eventsGET200ItemImage";
import type { EventsGET200ItemSeries } from "./eventsGET200ItemSeries";
import type { EventsGET200ItemState } from "./eventsGET200ItemState";
import type { EventsGET200ItemTicketCategoriesItem } from "./eventsGET200ItemTicketCategoriesItem";

export type EventsGET200Item = {
  /** Where the event occurs. */
  address?: EventsGET200ItemAddress;
  /** When the event was created. In ISO 8601 format. */
  created_at: string;
  /** When the event occurs. */
  date_time: EventsGET200ItemDateTime;
  /** An editorial description of the event. */
  description?: string;
  /** Data for the event provided by a third party. */
  external_data?: EventsGET200ItemExternalData;
  /** The main image for the event. */
  image?: EventsGET200ItemImage;
  /** An event may be part of a series. One example of this is recurring events. */
  series?: EventsGET200ItemSeries;
  /** The state of the event. */
  state: EventsGET200ItemState;
  /** Total number of tickets which can be sold for the event. */
  ticket_capacity?: number;
  /** Ticket categories used for the event. Not present for events without ticketing. */
  ticket_categories?: EventsGET200ItemTicketCategoriesItem[];
  /** The event title. */
  title: string;
  /** When the event was last updated. In ISO 8601 format. */
  updated_at: string;
  /** An absolute url end users should use to view the event at the website. */
  url: string;
  /** A unique identifer for the event. */
  uuid: string;
};
